server:
  port: 8081

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URI}
    fetch-registry: true
    register-with-eureka: true

spring:
  application:
    name: auth-service
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: ${GOOGLE_REDIRECT_URI}
            scope: email, profile

  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}
    template:
      exchange: ${RABBITMQ_EXCHANGE}

app:
  base-url: ${APP_BASE_URL}
  app-name: ${APP_NAME}
  secrets:
    jwt-secret-key: ${APP_JWT_SECRET_KEY}
    hmac-secret-key: ${APP_HMAC_SECRET_KEY}
  redirects:
    email-activation-redirect-path: ${APP_EMAIL_ACTIVATION_REDIRECT_PATH}
    password-reset-redirect-path: ${APP_PASSWORD_RESET_REDIRECT_PATH}
  frontend:
    oauth-callback-url: ${APP_FRONTEND_OAUTH_CALLBACK_URL}
    oauth-signup-url: ${APP_FRONTEND_OAUTH_SIGNUP_URL}

rabbitmq:
  exchange: ${RABBITMQ_EXCHANGE}
  routing-key:
    email: ${RABBITMQ_EMAIL_ROUTING_KEY}
    notification: ${RABBITMQ_NOTIFICATION_ROUTING_KEY}

management:
  endpoints:
    web:
      exposure:
        include: "*"